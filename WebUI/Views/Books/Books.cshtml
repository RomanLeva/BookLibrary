@model WebUI.Models.PageViewModel
@{
     ViewBag.Title = "Books";
}
<div class="createnew">
    @Html.ActionLink("Create New", "Create")
</div>
<div>@Html.ActionLink("Fill With Fake Books", "Fill")</div>
<div class="filters">
    @using (Html.BeginForm("Search", "Books", FormMethod.Post))
    {
        <table class="filter">
            <tr>
                <th>by book name</th>
                <th>by author name</th>
                <th>by genre</th>
                <th>by year</th>
            </tr>
            <tr>
                <td>
                    @Html.TextBox("BookName")
                </td>
                <td>
                    @Html.TextBox("AuthorName")
                </td>
                <td>
                    @Html.TextBox("Genre")
                </td>
                <td>
                    @Html.TextBox("Date")
                </td>
                <td>
                    <input type="submit" value="Search" />
                </td>
            </tr>
        </table>
        <p></p>
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().BookId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().PublicationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().Isbn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BookViewModels.FirstOrDefault().Text)
        </th>
        <th></th>
    </tr>

    @{ 
        long start = 0;
        long end = 0;
        if (Model.PageNumber == 1)
        {
            start = 1;
            end = Model.PageSize;
        }
        else
        {
            start = (Model.PageNumber - 1) * Model.PageSize;
            end = Model.PageNumber * Model.PageSize;
        }
        var items = Model.BookViewModels.Where(book => book.BookId >= start & book.BookId <= end);
        foreach (var item in items)
        {
            <tr id="book">
                <td>
                    @Html.DisplayFor(modelItem => item.BookId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublicationDate.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Isbn)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit/" + item.BookId) |
                    @Html.ActionLink("Details", "Book/" + item.BookId) |
                    @Html.ActionLink("Delete", "Delete/" + item.BookId)
                </td>
            </tr>
        }
        }
</table>
<div class="btn-group">
    @if (Model.PageNumber > 1)
    {
        @Html.RouteLink("<<", "Books", new { controller = "Books", action = "Books", page = 1 }, new { @class = "btn btn-default" })
        @Html.RouteLink("<", "Books", new { controller = "Books", action = "Books", page = Model.PageNumber - 1 }, new { @class = "btn btn-default" })
    }
    @if (Model.PageNumber < Math.Abs(Model.BookViewModels.Count() / Model.PageSize) + 1)
    {
        @Html.RouteLink(">", "Books", new { controller = "Books", action = "Books", page = Model.PageNumber + 1 }, 
       new { @class = "btn btn-default" })
        @Html.RouteLink(">>", "Books", new { controller = "Books", action = "Books", page = Math.Abs(Model.BookViewModels.Count() / Model.PageSize) + 1 },
       new { @class = "btn btn-default" })
    }

</div>
